import randombytes from 'randombytes'

export {
  randombytes as randomBytes,
  randombytes as rng,
  randombytes as pseudoRandomBytes,
  randombytes as prng,
}

import createHash from 'create-hash'

export {
  createHash,
  createHash as Hash,
}

import createHmac from 'create-hmac'

export {
  createHmac,
  createHmac as Hmac,
}

var algoKeys = ["sha224WithRSAEncryption", "RSA-SHA224", "sha256WithRSAEncryption", "RSA-SHA256", "sha384WithRSAEncryption", "RSA-SHA384", "sha512WithRSAEncryption", "RSA-SHA512", "RSA-SHA1", "ecdsa-with-SHA1", "sha256", "sha224", "sha384", "sha512", "DSA-SHA", "DSA-SHA1", "DSA", "DSA-WITH-SHA224", "DSA-SHA224", "DSA-WITH-SHA256", "DSA-SHA256", "DSA-WITH-SHA384", "DSA-SHA384", "DSA-WITH-SHA512", "DSA-SHA512", "DSA-RIPEMD160", "ripemd160WithRSA", "RSA-RIPEMD160", "md5WithRSAEncryption", "RSA-MD5"]
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
export function getHashes () {
  return hashes
}

export {pbkdf2, pbkdf2Sync} from 'pbkdf2'

export {
  Cipher,
  createCipher,
  Cipheriv,
  createCipheriv,
  Decipher,
  createDecipher,
  Decipheriv,
  createDecipheriv,
  getCiphers,
  listCiphers,
} from 'browserify-cipher'

export {
  DiffieHellmanGroup,
  createDiffieHellmanGroup,
  getDiffieHellman,
  createDiffieHellman,
  DiffieHellman,
} from 'diffie-hellman'

export {
  createSign,
  Sign,
  createVerify,
  Verify,
} from 'browserify-sign'

export { default as createECDH } from 'create-ecdh'

export {
  publicEncrypt,
  privateEncrypt,
  publicDecrypt,
  privateDecrypt,
} from 'public-encrypt'

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

export {
  randomFill,
  randomFillSync,
} from 'randomfill'

export function createCredentials () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

export var constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}
